<h1>TODO</h1>
<dl>
 <dt>Inherited dates: show tickets that are in queues that have dates due...</dt>
 <dd></dd>
 <dt>Wiki</dt>
 <dd></dd>
 <dt>Who's doing what? (by group) (for managers)</dt>
 <dd></dd>
 <dt>Group/Member Management Screen</dt>
 <dd>From IRC: left side is list of people, right is list of groups.  clicking on name lights up their groups.</dd>
 <dt>Pager above tickets when viewing by milestone, etc (next &amp; prev)</dt>
 <dd></dd>
 <dt>"My" view, tickets sorted by date, priority and attention</dt>
 <dd></dd>
 <dt>RSS</dt>
 <dd></dd>
 <dt>Comment Hiders</dt>
 <dd></dd>
 <dt>"centered" system changes</dt>
 <dd><p class="jay">I created a 'system' identity and person, gets deployed in testing.</p></dd>
 <dt>Comment sources</dt>
 <dd></dd>
 <dt>Status identifiers need to be 'id' based, and passed to <code>c.loc</code></dt>
 <dd><p class="jay">Right now they're human readable, and probably need a lookup table off schema.  Something like <code>$schema-&gt;status('ATTN_NEEDED')</code> which returns the right thing would be nice.  Thoughts?</p></dd>
 <dt>Tickets</dt>
 <dd>
  <dl>
   <dt>Dependencies</dt>
   <dd><p class="jay">Dependencies are tracked via a simple link table, needs to be fleshed out more but this is the simple thing.</p></dd>
   <dt>Attention</dt>
   <dd><div class="jay">Ok, attention works.  Here's what I have so far:
        <pre><code>
        $ticket-&gt;needs_attention($identity);
        # And just check:
        if ( defined ( my $identity = $ticket-&gt;needs_attention ) {
            email($identity, 'hey, asshole.');
        }
        # After it is ready to be cleared:
        $ticket-&gt;clear_attention;

        </code></pre>
     I still am looking at good ways to fetch all tickets that need attention,
     and filter by queues, etc.  Since queues are multi-depth it makes the
     query slightly more difficult.  Or at least big.  For now <code>$queue-&gt;tickets-&gt;search({ 'status.name' =&gt; 'Attention Required' });</code> works.
     </div>
   </dd>
  </dl>
 </dd>
 <dt>Milestones</dt>
 <dd>
  <dl>
   <dt>Needs an owner. Like a pumpking.</dt>
   <dd>good idea.</dd>
   <dt>why not just make them special tickets?  it could depends on all it's children and tickets have due dates and descriptions and summaries!</dt>
   <dd>
    <p class="jay">A Ticket is now a subclass of Queue, with special things that are more specific to tickets.  Both Queues and tickets are in a tree, has a parent.  In most cases, a ticket will just link only upstream to a Queue.  Queue's have a type column, which can be 'milestone'. Due dates are time markers, so you can set other points (like Due, In Testing, etc).  I added a convenience method $ticket-&gt;due_date (same with $queue). </p>
   </dd>
  </dl>
 </dd>
</dl>

<p>Changed this to a dl list so I can respond more sensibly.</p>
